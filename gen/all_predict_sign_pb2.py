# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: all_predict_sign.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16\x61ll_predict_sign.proto\x12\x07predict\"Y\n\x12\x46rameSequenceInput\x12\x0e\n\x06\x66rames\x18\x01 \x03(\x02\x12\x10\n\x08store_id\x18\x02 \x01(\t\x12\x0b\n\x03\x66ps\x18\x03 \x01(\x05\x12\x14\n\x0cvideo_length\x18\x04 \x01(\x05\"Q\n\rPredictResult\x12\x10\n\x08store_id\x18\x01 \x01(\t\x12\x1a\n\x12predicted_sentence\x18\x02 \x01(\t\x12\x12\n\nconfidence\x18\x03 \x01(\x02\"0\n\x0bKoreanInput\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x10\n\x08store_id\x18\x02 \x01(\t\"/\n\rSignUrlResult\x12\x10\n\x08store_id\x18\x01 \x01(\t\x12\x0c\n\x04urls\x18\x02 \x03(\t2\x9d\x01\n\x06SignAI\x12H\n\x11PredictFromFrames\x12\x1b.predict.FrameSequenceInput\x1a\x16.predict.PredictResult\x12I\n\x19TranslateKoreanToSignUrls\x12\x14.predict.KoreanInput\x1a\x16.predict.SignUrlResultB\x18Z\x16\x63\x61pstone-2025-30/protob\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'all_predict_sign_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\026capstone-2025-30/proto'
  _FRAMESEQUENCEINPUT._serialized_start=35
  _FRAMESEQUENCEINPUT._serialized_end=124
  _PREDICTRESULT._serialized_start=126
  _PREDICTRESULT._serialized_end=207
  _KOREANINPUT._serialized_start=209
  _KOREANINPUT._serialized_end=257
  _SIGNURLRESULT._serialized_start=259
  _SIGNURLRESULT._serialized_end=306
  _SIGNAI._serialized_start=309
  _SIGNAI._serialized_end=466
# @@protoc_insertion_point(module_scope)
